{"version":3,"sources":["webpack:///src/app/pages/ar-builder/ar-builder-heroes-dialog/ar-builder-heroes-dialog.ts","webpack:///src/app/pages/ar-builder/ar-builder-heroes-dialog/ar-builder-heroes-dialog.html","webpack:///src/app/pages/skill-info-dialog/skill-info-dialog.ts","webpack:///src/app/pages/skill-info-dialog/skill-info-dialog.html","webpack:///src/app/models/Enums.ts","webpack:///src/app/pages/edit-build/edit-build.ts","webpack:///src/app/pages/edit-build/edit-build.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/ar-builder/ar-builder.component.ts","webpack:///src/app/pages/ar-builder/ar-builder.component.html","webpack:///src/app/pipes/hero-skill-filter-by.pipe.ts","webpack:///src/app/services/map-finder.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/skill-info/skill-info.component.ts","webpack:///src/app/pages/skill-info/skill-info.component.html","webpack:///src/app/models/index.ts","webpack:///src/app/pages/ar-builder/ar-builder-structures-dialog/ar-builder-structures-dialog.ts","webpack:///src/app/pages/ar-builder/ar-builder-structures-dialog/ar-builder-structures-dialog.html","webpack:///src/app/pages/ar-builder/ar-edit-build-dialog/ar-edit-build-dialog.ts","webpack:///src/app/pages/ar-builder/ar-edit-build-dialog/ar-edit-build-dialog.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/ar-builder/ar-builder-terrain-dialog/ar-builder-terrain-dialog.ts","webpack:///src/app/pages/ar-builder/ar-builder-terrain-dialog/ar-builder-terrain-dialog.html","webpack:///src/app/pipes/string-filter-by.pipe.ts","webpack:///src/app/pipes/index.ts","webpack:///src/app/services/skills.service.ts","webpack:///src/app/models/SkillModel.ts","webpack:///src/app/services/stats-calculator.service.ts","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/unit-finder.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["short","ARBuilderHeroesDialog","dialogRef","heroes","fb","snackBar","data","pageNumber","selectedHeroes","heroFilter","group","name","blessing","unfilteredList","getHeroList","sort","a","b","id","updateFilter","beforeClosed","subscribe","close","ev","pageIndex","filters","value","baseList","filter","toLowerCase","includes","parseInt","heroList","i","length","push","hero","baseBuild","rarity","merges","skills","resplendent","ivs","boon","neutral","bane","dragonflowers","build","uid","generate","open","duration","index","splice","changePage","selector","templateUrl","styleUrls","SkillInfoDialog","unitFinder","fodderAt","console","log","afterClosed","skill","JSON","stringify","IVS","Blessing","MovementType","WeaponType","Origin","EditBuild","statCalculator","settings","heroEnabled","blessingEnabled","summonerSupportEnabled","allySupportEnabled","heroDataChange","hero_name_filter","weapon_name_filter","assist_name_filter","special_name_filter","a_name_filter","b_name_filter","c_name_filter","seal_name_filter","BlessingEnum","IVEnum","refines","getAllMaxSkillsCategories","map","x","y","refined","units","unitsDic","getHeroDictionary","stats","calculateAllStats","heroData","Array","max_dragonflowers","fill","heroBuild","disabled","required","weapon","refine","assist","special","c","seal","s","updateRefines","valueChanges","getRawValue","emit","patchValue","get","disable","enable","getRefinesById","updateMerges","environment","production","API_URL","STRUCTURE_DATA","image","display","description","costType","cost","ArBuilderComponent","dialog","mapFinder","stat","folder","type","permanent","isSchool","currentMap","MAX_LIFT_LOSS","currentLiftLoss","counts","defense","traps","decorations","season","currentlyDisplayedHeroStats","hp","atk","def","spd","res","maps","getARMaps","Object","assign","updateMapStructures","currentlyDisplayedHero","allies","calculateLiftLoss","tile","currentlyDisplayedStructure","mapName","newMap","j","structuresDialog","width","height","structures","flattenedNew","toRemove","flattenedCurrent","structure","currentHeroes","currentUID","newUID","removalPriority","shift","heroesDialog","slot","title","undefined","terrainDialog","changeMap","editBuildDialog","event","container","item","previousContainer","max","numMythics","numBlessed","unit","href","mapData","unitData","encodedURI","encodeURI","document","createElement","setAttribute","body","appendChild","click","exportData","openHeroesDialog","openStructuresDialog","openTerrainDialog","HeroSkillFilterByPipe","arr","heroId","getHeroById","inheritable","restrictedTo","moveType","movement_type","weaponType","unit_type","fodder","AR_MAPS","MapFinderService","providedIn","AppComponent","SkillInfoComponent","getRefines","might","hasFodder","ARBuilderStructuresDialog","st","buildings","selected","buildingCount","schoolSelected","decorationCount","selectBuilding","building","selectTrap","selectDecoration","decoration","ret","concat","AREditBuildDialog","AppModule","declarations","imports","providers","bootstrap","entryComponents","ARBuilderTerrainDialog","mapDisplay","currentlySelected","StringFilterByPipe","searchText","fieldName","it","toString","SKILLS_DICTIONARY","SKILLS_BY_CATEGORIES","MAX_SKILLS_BY_CATEGORIES","REFINE_SKILLS","CATEGORIES","SkillsService","getAllSkills","getAllSkillCategories","getSkillById","getAllSkillsInCategory","category","indexOf","getAllMaxSkillsInCategory","getAllRefines","SkillModel","StatsCalcualator","rarityGrowths","bst","base_stats","orderedStats","keys","orderedStatsMerges","orderedDragonFlowers","growths","growth_rates","Math","floor","statsTop","slice","ally","blessing_bonus","NotFoundComponent","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","relativeLinkResolution","exports","HERO_LIST","HERO_DICTIONARY","UnitFinderService","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MatSnackBar, MatTableDataSource, MAT_DIALOG_DATA, PageEvent } from '@angular/material';\r\nimport { Blessing, HeroDataModel, HeroTableModel, IVS } from 'src/app/models';\r\nimport { BuildModel } from 'src/app/models/BuildModel';\r\nimport { HeroInfoModel } from 'src/app/models/HeroInfoModel';\r\nimport { UnitFinderService } from 'src/app/services/unit-finder.service';\r\nconst short = require('short-uuid');\r\n\r\n@Component({\r\n    selector: 'ar-builder-heroes-dialog',\r\n    templateUrl: './ar-builder-heroes-dialog.html',\r\n    styleUrls: ['./ar-builder-heroes-dialog.scss']\r\n})\r\nexport class ARBuilderHeroesDialog {\r\n\r\n    heroList: HeroDataModel[][];\r\n    baseList: HeroDataModel[];\r\n    unfilteredList: HeroDataModel[];\r\n\r\n    heroFilter: FormGroup;\r\n\r\n    pageNumber: number = 0;\r\n\r\n    selectedHeroes: HeroInfoModel[] = [];\r\n    \r\n    constructor(public dialogRef: MatDialogRef<ARBuilderHeroesDialog>, private heroes: UnitFinderService, private fb: FormBuilder, private snackBar: MatSnackBar, @Inject(MAT_DIALOG_DATA) public data: HeroInfoModel[]){\r\n        this.selectedHeroes = data;\r\n        this.heroFilter = this.fb.group({\r\n            name: [''],\r\n            blessing: ['0']\r\n        });\r\n        this.unfilteredList = this.heroes.getHeroList().sort((a, b) => {\r\n            if(a.id < b.id){\r\n                return -1\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        this.updateFilter();\r\n\r\n        this.dialogRef.beforeClosed().subscribe( // overwrites default exiting behaviour - important if user clicks outside of dialog to close\r\n            () => {\r\n                this.dialogRef.close(this.selectedHeroes);\r\n            }\r\n        );\r\n    }\r\n\r\n    changePage(ev: PageEvent){\r\n        this.pageNumber = ev.pageIndex;\r\n    }\r\n\r\n    updateFilter(){ //TODO: this is bugged sometimes idk why\r\n\r\n        let filters = this.heroFilter.value;\r\n        this.baseList = this.unfilteredList.filter(a => a.name.toLowerCase().includes(filters['name'].toLowerCase()));\r\n        if(filters.blessing !== \"0\"){\r\n            this.baseList = this.baseList.filter(a => a.blessing === parseInt(filters.blessing));\r\n        }\r\n        this.heroList = [];\r\n        for(let i = 0; i < this.baseList.length; i++){\r\n            if(i % 25 === 0){\r\n                this.heroList.push([]);\r\n            }\r\n            this.heroList[this.heroList.length - 1].push(this.baseList[i]);\r\n        }\r\n\r\n        if(this.pageNumber > this.heroList.length - 1){\r\n            this.pageNumber = this.heroList.length - 1;\r\n        }\r\n    }\r\n    \r\n    addHero(hero: HeroDataModel){\r\n        if(this.selectedHeroes.length < 6){\r\n            let baseBuild: BuildModel = {blessing: hero.blessing, rarity: 5, merges: 0, skills: {}, resplendent: false, ivs: {boon: IVS.neutral, bane: IVS.neutral}, dragonflowers: 0};\r\n            this.selectedHeroes.push({...hero, ...{build: baseBuild, uid: short.generate()}});\r\n        } else {\r\n            this.snackBar.open(\"Max of 6 heroes allowed\", \"Close\", {duration: 2000});\r\n        }\r\n    }\r\n\r\n    removeHero(index: number){\r\n        this.selectedHeroes.splice(index, 1);\r\n    }\r\n}","<div class=\"selected_heroes_container\">\r\n    <div class=\"selected_hero\" *ngFor=\"let i of [0,1,2,3,4,5]\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[i].id+'.png'\" *ngIf=\"this.selectedHeroes.length > i\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > i\" (click)=\"removeHero(i)\">\r\n    </div>\r\n    <!-- <div class=\"selected_hero\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[1].id+'.png'\" *ngIf=\"this.selectedHeroes.length > 1\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > 1\" (click)=>\r\n    </div>\r\n    <div class=\"selected_hero\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[2].id+'.png'\" *ngIf=\"this.selectedHeroes.length > 2\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > 2\" (click)=>\r\n    </div>\r\n    <div class=\"selected_hero\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[3].id+'.png'\" *ngIf=\"this.selectedHeroes.length > 3\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > 3\" (click)=>\r\n    </div>\r\n    <div class=\"selected_hero\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[4].id+'.png'\" *ngIf=\"this.selectedHeroes.length > 4\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > 4\" (click)=>\r\n    </div>\r\n    <div class=\"selected_hero\">\r\n        <img src=\"assets/ui/hero-selector.png\">\r\n        <img class=\"hero\" [src]=\"'assets/units/'+this.selectedHeroes[5].id+'.png'\" *ngIf=\"this.selectedHeroes.length > 5\">\r\n        <img class=\"remove_icon\" src=\"assets/ui/x.png\" *ngIf=\"this.selectedHeroes.length > 5\" (click)=>\r\n    </div> -->\r\n</div>\r\n<hr />\r\n<form [formGroup]=\"heroFilter\">\r\n    <mat-form-field>\r\n        <input matInput name=\"name\" formControlName=\"name\" placeholder=\"Hero Name\" (keyup)=\"updateFilter()\">\r\n    </mat-form-field>\r\n    <br />\r\n    <mat-button-toggle-group formControlName=\"blessing\" value=\"0\" aria-label=\"Blessing\" (change)=\"updateFilter()\">\r\n        <mat-button-toggle value=\"0\" matTooltip=\"No Blessing\"><div class=\"blank_filler\"></div></mat-button-toggle>\r\n        <mat-button-toggle value=\"6\" matTooltip=\"Dark Mythic\"><img src=\"assets/ui/dark_blessing.png\"></mat-button-toggle>\r\n        <mat-button-toggle value=\"8\" matTooltip=\"Anima Mythic\"><img src=\"assets/ui/anima_blessing.png\"></mat-button-toggle>\r\n        <mat-button-toggle value=\"2\" matTooltip=\"Water Legendary\"><img src=\"assets/ui/water_blessing.png\"></mat-button-toggle>\r\n        <mat-button-toggle value=\"3\" matTooltip=\"Wind Legendary\"><img src=\"assets/ui/wind_blessing.png\"></mat-button-toggle>\r\n        <mat-button-toggle value=\"4\" matTooltip=\"Earth Legendary\"><img src=\"assets/ui/earth_blessing.png\"></mat-button-toggle>\r\n        <mat-button-toggle value=\"1\" matTooltip=\"Fire Legendary\"><img src=\"assets/ui/fire_blessing.png\"></mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n</form>\r\n<div class=\"hero_icons_container\">\r\n    <div *ngFor=\"let hero of heroList[pageNumber]\">\r\n        <img [src]=\"'assets/units/'+hero.id+'.png'\" [matTooltip]='hero.name + \": \" + hero.title' (click)=\"addHero(hero)\">\r\n    </div>\r\n    <mat-paginator (page)=\"changePage($event)\" [pageIndex]=\"pageNumber\" [length]=\"baseList.length\" pageSize=\"25\"></mat-paginator>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SkillModel, HeroModel } from 'src/app/models';\r\nimport { UnitFinderService } from 'src/app/services/unit-finder.service';\r\n\r\n@Component({\r\n    selector: 'skill-info-dialog',\r\n    templateUrl: './skill-info-dialog.html',\r\n    styleUrls: ['./skill-info-dialog.scss']\r\n})\r\nexport class SkillInfoDialog{\r\n\r\n    fodderAt = [];\r\n\r\n    constructor(public dialogRef: MatDialogRef<SkillInfoDialog>, @Inject(MAT_DIALOG_DATA) public data: SkillModel, public unitFinder: UnitFinderService){\r\n        console.log(this.data);\r\n        this.dialogRef.afterClosed().subscribe(\r\n            () => {\r\n                this.dialogRef = null\r\n            }\r\n        );\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    close(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    public displaySkill(skill): string {\r\n        return JSON.stringify(skill);\r\n    }\r\n}","<span id=\"dialog_close\" (click)=\"this.close()\" class=\"material-icons\">close</span>\r\n<app-skill-info [data]='data'></app-skill-info>\r\n<!-- <h2 class=\"image_title\"><img class=\"skill_icon_small\" [src]=\"'assets/skills/'+data.image+'.png'\" [matTooltip]=\"data.name\" [alt]=\"data.name\"> {{data.name}}</h2>\r\n<hr />\r\n<p>{{data.description}}</p>\r\n<p>Inheritable?:&nbsp;<span *ngIf=\"data.inheritable\">Yes</span><span *ngIf=\"!data.inheritable\">No</span></p>\r\n<p *ngIf=\"data.cooldown > 0\">Special Charge:&nbsp;{{data.cooldown}}</p>\r\n<hr />\r\n<p>Units that have this skill:</p>\r\n<!-- <img *ngFor=\"let hero of data.fodder\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"hero.unitFinder.getUnitNameById(hero) + ': ' + hero.unitFinder.getUnitTitleById(hero)\"> -->\r\n<!-- <div *ngIf=\"data.fodder[0].length != 0\">\r\n    <p>At 1 star (<img src=\"assets/ui/star_bronze.png\">):</p>\r\n    <img *ngFor=\"let hero of data.fodder[0]\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"unitFinder.getUnitNameById(hero) + ': ' + unitFinder.getUnitTitleById(hero)\">\r\n</div>\r\n<div *ngIf=\"data.fodder[1].length != 0\">\r\n    <p>At 2 stars (<img src=\"assets/ui/star_bronze.png\">):</p>\r\n    <img *ngFor=\"let hero of data.fodder[1]\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"unitFinder.getUnitNameById(hero) + ': ' + unitFinder.getUnitTitleById(hero)\">\r\n</div>\r\n<div *ngIf=\"data.fodder[2].length != 0\">\r\n    <p>At 3 stars (<img src=\"assets/ui/star_bronze.png\">):</p>\r\n    <img *ngFor=\"let hero of data.fodder[2]\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"unitFinder.getUnitNameById(hero) + ': ' + unitFinder.getUnitTitleById(hero)\">\r\n</div>\r\n<div *ngIf=\"data.fodder[3].length != 0\">\r\n    <p>At 4 stars (<img src=\"assets/ui/star_silver.png\">):</p>\r\n    <img *ngFor=\"let hero of data.fodder[3]\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"unitFinder.getUnitNameById(hero) + ': ' + unitFinder.getUnitTitleById(hero)\">\r\n</div>\r\n<div *ngIf=\"data.fodder[4].length != 0\">\r\n    <p>At 5 stars (<img src=\"assets/ui/star_gold.png\">):</p>\r\n    <img *ngFor=\"let hero of data.fodder[4]\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"unitFinder.getUnitNameById(hero) + ': ' + unitFinder.getUnitTitleById(hero)\">\r\n</div> -->","export enum IVS {\r\n    neutral,\r\n    hp,\r\n    atk,\r\n    spd,\r\n    def,\r\n    res\r\n};\r\n\r\nexport enum Blessing{\r\n    none,\r\n    fire,\r\n    water,\r\n    wind,\r\n    earth,\r\n    light,\r\n    dark,\r\n    astra,\r\n    anima\r\n};\r\n\r\nexport enum MovementType{\r\n    infantry,\r\n    armor,\r\n    cavalry,\r\n    flying\r\n};\r\n\r\nexport enum WeaponType{\r\n    sword,\r\n    lance,\r\n    axe,\r\n    red_bow,\r\n    blue_bow,\r\n    green_bow,\r\n    colorless_bow,\r\n    red_dagger,\r\n    blue_dagger,\r\n    green_dagger,\r\n    colorless_dagger,\r\n    red_tome,\r\n    blue_tome,\r\n    green_tome,\r\n    colorless_tome,\r\n    staff,\r\n    red_breath,\r\n    blue_breath,\r\n    green_breath,\r\n    colorless_breath,\r\n    red_beast,\r\n    blue_beast,\r\n    green_beast,\r\n    colorless_beast\r\n};\r\n\r\nexport enum Origin{\r\n    heroes,\r\n    shadow_dragon_new_mystery,\r\n    echoes,\r\n    genealogy,\r\n    thracia,\r\n    binding,\r\n    blazing,\r\n    sacred,\r\n    path,\r\n    dawn,\r\n    awakening,\r\n    fates,\r\n    houses,\r\n    mirage\r\n};","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Blessing, Dictionary, HeroDataModel, HeroTableModel, IVS, SkillModel, Stats } from 'src/app/models';\r\nimport { BuildModel } from 'src/app/models/BuildModel';\r\nimport { HeroInfoModel } from 'src/app/models/HeroInfoModel';\r\nimport { SkillsService } from 'src/app/services/skills.service';\r\nimport { StatsCalcualator } from 'src/app/services/stats-calculator.service';\r\nimport { UnitFinderService } from 'src/app/services/unit-finder.service';\r\n\r\n@Component({\r\n    selector: 'app-edit-build',\r\n    templateUrl: './edit-build.html',\r\n    styleUrls: ['./edit-build.scss']\r\n})\r\nexport class EditBuild implements OnInit{\r\n\r\n    @Input() public heroData: HeroInfoModel;\r\n    @Input() public settings: {heroEnabled: boolean, blessingEnabled: boolean, summonerSupportEnabled: boolean, allySupportEnabled: boolean} = {heroEnabled: true, blessingEnabled: true, summonerSupportEnabled: true, allySupportEnabled: true};\r\n    @Output() public heroDataChange = new EventEmitter<HeroInfoModel>();\r\n\r\n    dragonflowers: number[];\r\n\r\n    hero_name_filter: FormControl = new FormControl();\r\n    weapon_name_filter: FormControl = new FormControl();\r\n    assist_name_filter: FormControl = new FormControl();\r\n    special_name_filter: FormControl = new FormControl();\r\n    a_name_filter: FormControl = new FormControl();\r\n    b_name_filter: FormControl = new FormControl();\r\n    c_name_filter: FormControl = new FormControl();\r\n    seal_name_filter: FormControl = new FormControl();\r\n\r\n    units: HeroDataModel[];\r\n\r\n    unitsDic: Dictionary<HeroDataModel>;\r\n\r\n    heroBuild: FormGroup;\r\n\r\n    BlessingEnum = Blessing;\r\n\r\n    IVEnum = IVS;\r\n\r\n    skills: SkillModel[][];\r\n\r\n    refines: SkillModel[] = [];\r\n\r\n    stats: Stats;\r\n\r\n\r\n    constructor(private unitFinder: UnitFinderService, private fb: FormBuilder, private skill: SkillsService, public statCalculator: StatsCalcualator){\r\n        this.skills = this.skill.getAllMaxSkillsCategories().map(a => a.sort((x, y) => x.name < y.name ? -1 : 0));\r\n        this.skills[0] = this.skills[0].filter(a => !a.refined);\r\n\r\n        this.units = this.unitFinder.getHeroList().sort((a,b) => {if(a.id < b.id){return -1;}return 0;});\r\n        this.unitsDic = this.unitFinder.getHeroDictionary();\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.stats = this.statCalculator.calculateAllStats(this.heroData);\r\n\r\n        this.dragonflowers = Array(this.heroData.max_dragonflowers + 1).fill(0).map((x, i) => i);\r\n\r\n        this.heroBuild = this.fb.group({\r\n            hero: [{value: this.heroData.id, disabled: !this.settings.heroEnabled}, Validators.required],\r\n            merges: [this.heroData.build.merges, Validators.required],\r\n            rarity: [this.heroData.build.rarity, Validators.required],\r\n            dragonflowers: [this.heroData.build.dragonflowers, Validators.required],\r\n            resplendent: [{value: false, disabled: !this.heroData.resplendent}, Validators.required],\r\n            blessing: [{value: this.heroData.blessing === 0 ? this.heroData.build.blessing : this.heroData.blessing, disabled: (!this.settings.blessingEnabled || this.heroData.blessing !== 0)}, Validators.required],\r\n            boon: [this.heroData.build.ivs.boon, Validators.required],\r\n            bane: [{value: this.heroData.build.ivs.bane, disabled: this.heroData.build.merges > 0}, Validators.required],\r\n            weapon: [this.heroData.build.skills.weapon],\r\n            refine: [{value: this.heroData.build.skills.weapon ? (this.heroData.build.skills.weapon.refined ? this.heroData.build.skills.weapon : null) : null, disabled: this.refines.length === 0}],\r\n            assist: [this.heroData.build.skills.assist],\r\n            special: [this.heroData.build.skills.special],\r\n            a: [this.heroData.build.skills.a],\r\n            b: [this.heroData.build.skills.b],\r\n            c: [this.heroData.build.skills.c],\r\n            seal: [this.heroData.build.skills.s],\r\n        });\r\n        this.updateRefines();\r\n\r\n        this.heroBuild.valueChanges.subscribe((data) => {\r\n            data = this.heroBuild.getRawValue();\r\n            console.log(data);\r\n            let build: BuildModel = {rarity: data.rarity, merges: data.merges, resplendent: data.resplendent, ivs: {boon: data.boon, bane: data.bane}, dragonflowers: data.dragonflowers, blessing: data.blessing, skills: {weapon: data.refine ? data.refine : data.weapon, assist: data.assist, special: data.special, a: data.a, b: data.b, c: data.c, s: data.seal}};\r\n            console.log(build);\r\n            let uid = this.heroData.uid;\r\n            this.heroData = {...this.unitsDic[data.hero], uid: uid, build: build};\r\n\r\n            this.stats = this.statCalculator.calculateAllStats(this.heroData);\r\n            this.heroDataChange.emit(this.heroData);\r\n        });\r\n    }\r\n\r\n    updateMerges(){\r\n        if(this.heroBuild.value['merges'] > 0){\r\n            this.heroBuild.patchValue({bane: 0});\r\n            this.heroBuild.get('bane').disable();\r\n        } else {\r\n            this.heroBuild.get('bane').enable();\r\n        }\r\n    }\r\n    \r\n    updateRefines(){\r\n        if(this.heroBuild.value['weapon']){\r\n            this.refines = this.skill.getRefinesById(this.heroBuild.value['weapon'].id);\r\n            if(this.refines){\r\n                if(this.refines.length > 0){\r\n                    this.heroBuild.get('refine').enable();\r\n                    return;\r\n                }\r\n                this.heroBuild.get('refine').disable();\r\n            }\r\n            this.heroBuild.get('refine').disable();\r\n        }\r\n    }\r\n    \r\n}","\r\n<mat-card-title>Edit Build</mat-card-title>\r\n<div class=\"hero_info_tables\">\r\n    <table>\r\n        <tr><td colspan=\"2\">{{this.heroData.name}}: {{this.heroData.title}}</td></tr>\r\n        <tr><td colspan=\"2\">Level 40<span *ngIf=\"this.heroData.build.merges > 0\">+{{this.heroData.build.merges}}</span></td></tr>\r\n        <tr><td>HP: {{this.stats.hp}}</td><td>DF: {{this.heroData.build.dragonflowers}}</td></tr>\r\n        <tr><td>ATK: {{this.stats.atk}}</td><td>SPD: {{this.stats.spd}}</td></tr>\r\n        <tr><td>DEF: {{this.stats.def}}</td><td>RES: {{this.stats.res}}</td></tr>\r\n        <tr><td colspan=\"2\">Blessing: {{this.BlessingEnum[this.heroData.build.blessing]|titlecase}}</td></tr>\r\n    </table>\r\n    <table>\r\n        <tr><td>{{this.heroData.build.skills.weapon ? this.heroData.build.skills.weapon.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.assist ? this.heroData.build.skills.assist.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.special ? this.heroData.build.skills.special.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.a ? this.heroData.build.skills.a.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.b ? this.heroData.build.skills.b.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.c ? this.heroData.build.skills.c.name : \"None\"}}</td></tr>\r\n        <tr><td>{{this.heroData.build.skills.s ? this.heroData.build.skills.s.name : \"None\"}}</td></tr>\r\n    </table>\r\n</div>\r\n<hr />\r\n<form [formGroup]=\"heroBuild\">\r\n    <mat-form-field>\r\n        <mat-label>Hero</mat-label>\r\n        <mat-select formControlName=\"hero\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"hero_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No Heroes Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option *ngFor=\"let unit of units | stringFilterBy:hero_name_filter.value:'name'\" [value]=\"unit.id\">\r\n                {{unit.name}}: {{unit.title}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Merges</mat-label>\r\n        <mat-select formControlName=\"merges\" (selectionChange)=\"updateMerges()\">\r\n            <mat-option *ngFor=\"let merge of [0,1,2,3,4,5,6,7,8,9,10]\" [value]=\"merge\">+{{merge}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Rarity</mat-label>\r\n        <mat-select formControlName=\"rarity\">\r\n            <mat-option *ngFor=\"let i of [3,4,5]\" [value]='i'>{{i}}&#9733;</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Dragonflowers</mat-label>\r\n        <mat-select formControlName=\"dragonflowers\">\r\n            <mat-option *ngFor=\"let dragonflower of dragonflowers\" [value]=\"dragonflower\">{{dragonflower}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Resplendent</mat-label>\r\n        <mat-select formControlName=\"resplendent\">\r\n            <mat-option *ngFor=\"let val of ['Off/Unavailable', 'On']\" [value]=\"val === 'On'\">{{val}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Blessing</mat-label>\r\n        <mat-select formControlName=\"blessing\">\r\n            <mat-option *ngFor=\"let blessing of [0,1,2,3,4,5,6,7,8]\" [value]=\"blessing\"><img *ngIf=\"blessing !== 0\" [src]=\"'assets/ui/'+BlessingEnum[blessing]+'_blessing.png'\"> {{BlessingEnum[blessing]|titlecase}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Asset</mat-label>\r\n        <mat-select formControlName=\"boon\">\r\n            <mat-option *ngFor=\"let iv of [0,1,2,3,4,5]\" [value]=\"iv\">{{IVEnum[iv]|titlecase}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Flaw</mat-label>\r\n        <mat-select formControlName=\"bane\">\r\n            <mat-option *ngFor=\"let iv of [0,1,2,3,4,5]\" [value]=\"iv\">{{IVEnum[iv]|titlecase}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Weapon</mat-label>\r\n        <mat-select formControlName=\"weapon\" (selectionChange)=\"updateRefines()\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"weapon_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No Weapons Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let weapon of skills[0] | stringFilterBy:weapon_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"weapon\">{{weapon.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Refine</mat-label>\r\n        <mat-select formControlName=\"refine\">\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let refine of refines\" [value]=\"refine\">{{refine.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Assist</mat-label>\r\n        <mat-select formControlName=\"assist\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"assist_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No Assists Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let assist of skills[1] | stringFilterBy:assist_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"assist\">{{assist.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Special</mat-label>\r\n        <mat-select formControlName=\"special\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"special_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No Specials Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let special of skills[2] | stringFilterBy:special_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"special\">{{special.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>A Skill</mat-label>\r\n        <mat-select formControlName=\"a\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"a_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No A Skills Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let a of skills[3] | stringFilterBy:a_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"a\">{{a.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>B Skill</mat-label>\r\n        <mat-select formControlName=\"b\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"b_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No B Skills Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let b of skills[4] | stringFilterBy:b_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"b\">{{b.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>C Skill</mat-label>\r\n        <mat-select formControlName=\"c\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"c_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No C Skills Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let c of skills[5] | stringFilterBy:c_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"c\">{{c.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Seal</mat-label>\r\n        <mat-select formControlName=\"seal\">\r\n            <mat-option>\r\n                <ngx-mat-select-search [formControl]=\"seal_name_filter\" placeholderLabel=\"Search\" noEntriesFoundLabel=\"No Seals Found\"></ngx-mat-select-search>\r\n            </mat-option>\r\n            <mat-option>None</mat-option>\r\n            <mat-option *ngFor=\"let seal of skills[6] | stringFilterBy:seal_name_filter.value:'name' | heroSkillFilterBy:this.heroBuild.getRawValue()['hero']\" [value]=\"seal\">{{seal.name}}</mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MatGridTileFooterCssMatStyler } from '@angular/material';\r\nimport { link } from 'fs';\r\nimport { Blessing, Dictionary, Stats } from 'src/app/models';\r\nimport { HeroInfoModel } from 'src/app/models/HeroInfoModel';\r\nimport { MapFinderService } from 'src/app/services/map-finder.service';\r\nimport { StatsCalcualator } from 'src/app/services/stats-calculator.service';\r\nimport { ARBuilderHeroesDialog } from './ar-builder-heroes-dialog/ar-builder-heroes-dialog';\r\nimport { ARBuilderStructuresDialog } from './ar-builder-structures-dialog/ar-builder-structures-dialog';\r\nimport { ARBuilderTerrainDialog } from './ar-builder-terrain-dialog/ar-builder-terrain-dialog';\r\nimport { AREditBuildDialog } from './ar-edit-build-dialog/ar-edit-build-dialog';\r\n\r\ntype ARTile = {slot?: number, uid?: string, image: string, display: string, folder: \"aether_raids\" | \"units\", type: \"blank\" | \"building\" | \"trap\" | \"decoration\" | \"unit\" | \"hero\" | \"other\", permanent: boolean, isSchool: boolean};\r\n\r\ninterface ARStructureData{\r\n  image: string;\r\n  display: string;\r\n  description: string;\r\n  costType: \"heavenly_dew\" | \"aether_stone\" | \"rr_affinity\";\r\n  cost: number[];\r\n}\r\n\r\nconst STRUCTURE_DATA: Dictionary<ARStructureData> = {\"fortress\": {image: \"fortress\", display: \"Fortress\", description: \"If structure's level > opponent's Fortress (O) level, grants Atk/Spd/Def/Res+X to all allies. (X = difference in level × 4). Note: Cannot be removed or destroyed.\", costType: \"heavenly_dew\", cost: [0,500,1000,1500,2000]}, \"aether_amphorae\": {image: \"aether_amphorae\", display: \"Aether Amphorae\", description: \"Stores up to 100/150/200/250 Aether. If destroyed in an attack, it restores Aether to the raiding party (if they win). Note: Cannot be removed. Can be destroyed.\", costType: \"heavenly_dew\", cost: [0,100,300,500]}, \"aether_fountain\": {image: \"aether_fountain\", display: \"Aether Fountain\", description: \"Restores 50/60/70 Aether to the Aether Keep each day. If destroyed in an attack, it restores Aether to the raiding party (if they win). Note: Cannot be removed. Can be destroyed.\", costType: \"heavenly_dew\", cost: [0, 100, 300]}, \"armor_school\": {image: \"armor_school\", display: \"Armor School\", description: \"At start of turn, inflicts Atk/Spd/Def/Res -2/3/4/5/6/7/8 on armored foes within 3 columns centered on structure through their next actions. Note: Only one school can be placed at a time.\", costType: \"aether_stone\", cost:[50,150,250,350,450,750,1000]}, \"bolt_tower\": {image: \"bolt_tower\", display: \"Bolt Tower\", description: \"At the start of turn 3, deals 10/15/20/25/30/35/40 damage to foes within 7 rows and 3 columns centered on structure.\", costType: \"aether_stone\", cost: [100,300,500,700,900,1500,2000]}, \"bright_shrine\": {image: \"bright_shrine\", display: \"Bright Shrine\", description: \"At start of turn, inflicts Atk/Spd -2/3/4/5/6/7/8 on foe on the enemy team with the highest Atk+Spd total through its next action.\", costType: \"aether_stone\", cost: [100,300,500,700,900,1500,2000]}, \"catapult\": {image: \"catapult\", display: \"Catapult\", description: \"At start of turn, destroys offensive structures within the same column as this structure if their level ≤ this structure's level. Note: Fortress (O) cannot be destroyed.\", costType: \"aether_stone\", cost: [100,300,500,700,900,1500,2000]}, \"cavalry_school\": {image: \"cavalry_school\", display: \"Cavalry School\", description: \"At start of turn, inflicts Atk/Spd/Def/Res -2/3/4/5/6/7/8 on cavalry foes within 3 columns centered on structure through their next actions. Note: Only one school can be placed at a time.\", costType: \"aether_stone\", cost: [50,150,250,350,450,750,1000]}, \"dark_shrine\": {image: \"dark_shrine\", display: \"Dark Shrine\", description: \"At start of turn, inflicts Def/Res -2/3/4/5/6/7/8 on foe on the enemy team with the highest Def+Res total through its next action.\", costType: \"aether_stone\", cost:[100,300,500,700,900,1500,2000]}, \"duos_hindrance\": {image: \"duos_hindrance\", display: \"Duo's Hindrance\", description: \"If a Duo or Harmonized Hero is on the defensive team, foe cannot use Duo or Harmonized Skills between turn 1 and turn 3/4/5/6.\", costType: \"aether_stone\", cost:[100,300,500,700]}, \"flier_school\": {image: \"flier_school\", display: \"Flier School\", description: \"At start of turn, inflicts Atk/Spd/Def/Res -2/3/4/5/6/7/8 on flying foes within 3 columns centered on structure through their next actions. Note: Only one school can be placed at a time.\", costType: \"aether_stone\", cost:[50,150,250,350,450,750,1000]},\"healing_tower\":{image: \"healing_tower\", display: \"Healing Tower\", description: \"At start of turn, restores 10/15/20/25/30/35/40 HP to allies within 5 rows and 5 columns centered on structure.\", costType: \"aether_stone\",cost:[100,300,500,700,900,1500,2000]},\"infantry_school\":{image: \"infantry_school\", display: \"Infantry School\", description: \"At start of turn, inflicts Atk/Spd/Def/Res -2/3/4/5/6/7/8 on infantry foes within 3 columns centered on structure through their next actions. Note: Only one school can be placed at a time.\", costType: \"aether_stone\", cost:[50,150,250,350,450,750,1000]},\"panic_manor\": {image: \"panic_manor\", display: \"Panic Manor\", description: \"At start of turn, if any foes are within 7 rows and 3 columns centered on structure and their HP ≤ 40/45/50/55/60/65/70, converts bonuses on those foes into penalties through their next actions.\", costType:\"aether_stone\", cost:[100,300,500,700,900,1500,2000]},\"tactics_room\":{image:\"tactics_room\",display:\"Tactics Room\", description: \"At start of turn, if any foes are within 7 rows and 3 columns centered on structure and their HP ≤ 40 and they use bow, dagger, magic, or staff, restricts those foes' movement to 1 space through their next actions.\", costType: \"aether_stone\", cost:[100,300,500,700,900,1500,2000]},\"fake_bolt_trap\":{image:\"fake_bolt_trap\", display: \"False Bolt Trap\", description: \"This looks like a Bolt Trap, but it's just a fake.\", costType:\"aether_stone\", cost:[0]},\"fake_heavy_trap\":{image:\"fake_heavy_trap\", display: \"False Heavy Trap\", description: \"This looks like a Heavy Trap, but it's just a fake.\", costType: \"aether_stone\", cost:[0]}, \"bolt_trap\": {image: \"bolt_trap\", display: \"Bolt Trap\", description: \"If foe ends movement on this structure's space, deals 10/20/30/40/50 damage to target and units within 3 spaces. (Cancels foe's attack or Assist skill.)\", costType: \"aether_stone\", cost:[0,100,300,500,700]}, \"heavy_trap\": {image: \"heavy_trap\", display: \"Heavy Trap\", description: \"If foe ends movement on this structure's space, restricts movement of target and units within 2 spaces with HP ≤ 40/45/50/55/60 to 1 space through their next actions. (Cancels foe's attack and Assist skills.)\", costType: \"aether_stone\", cost:[0,100,300,500,700]},\"dining_hall\": {image: \"dining_hall\", display: \"Dining Hall\", description: \"An R&R structure for your Aether Resort.\", costType: \"rr_affinity\", cost:[120]}, \"field\": {image: \"field\", display: \"Field\", description: \"An R&R structure for your Aether Resort.\", costType: \"rr_affinity\", cost: [0]}, \"hot_spring\": {image: \"hot_spring\", display: \"Hot Spring\", description: \"An R&R structure for your Aether Resort.\", costType: \"rr_affinity\", cost: [300]}, \"inn\": {image: \"inn\", display: \"Inn\", description: \"An R&R structure for your Aether Resort.\", costType: \"rr_affinity\", cost:[300]}};\r\n\r\n@Component({\r\n  selector: 'app-ar-builder',\r\n  templateUrl: './ar-builder.component.html',\r\n  styleUrls: ['./ar-builder.component.scss']\r\n})\r\nexport class ArBuilderComponent implements OnInit {\r\n\r\n  // AR Map Data\r\n  public map: ARTile[] = [{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:true,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:true,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:true,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false},{image:\"blank\",display:\"\",folder:\"aether_raids\",type:\"blank\",permanent:false,isSchool:false}];\r\n  public currentMap: string = \"springwater\";\r\n  public units: HeroInfoModel[] = [];\r\n\r\n  // AR Map Metadata\r\n  public MAX_LIFT_LOSS = 100;\r\n  public currentLiftLoss = 100;\r\n  public counts = {defense: 1, traps: 0, decorations: 0};\r\n\r\n  // Season Toggle\r\n  public season: FormControl = new FormControl(\"6\");\r\n\r\n  // All Map Data Storage\r\n  public maps: Dictionary<ARTile[]>;\r\n\r\n  // Description Box Data\r\n  public currentlyDisplayedStructure: ARStructureData;\r\n  public currentlyDisplayedHero: HeroInfoModel;\r\n  public currentlyDisplayedHeroStats: Stats = {hp: 0, atk: 0, def: 0, spd: 0, res: 0};\r\n\r\n  // Enum\r\n  public BlessingEnum = Blessing;\r\n\r\n  constructor(private dialog: MatDialog, private mapFinder: MapFinderService, private stat: StatsCalcualator) { }\r\n\r\n  ngOnInit() {\r\n    this.maps = this.mapFinder.getARMaps();\r\n\r\n    // Needs to be assigned so doesn't override map data\r\n    this.map = Object.assign([], this.maps[this.currentMap]);\r\n\r\n    // Compulsory structures\r\n    this.updateMapStructures([{image: \"aether_amphorae\", display: \"Aether Amphorae\", folder: \"aether_raids\", type: \"other\", permanent: false, isSchool: false}, {image: \"aether_fountain\", display: \"Aether Fountain\", folder: \"aether_raids\", type: \"other\", permanent: false, isSchool: false}, {image: \"fortress\", display: \"Fortress\", folder: \"aether_raids\", type: \"other\", permanent: false, isSchool: false}]);\r\n    \r\n    this.season.valueChanges.subscribe((data) => {\r\n      for(let i = 0; i < this.units.length; i++){\r\n        if(!this.units[i].blessing){\r\n          this.units[i].build.blessing = data; // updates unit build blessing if unit isn't legendary/mythic\r\n        }\r\n        if(this.currentlyDisplayedHero){\r\n          this.currentlyDisplayedHeroStats = this.stat.calculateAllStats(this.currentlyDisplayedHero, {season: [parseInt(data)], allies: this.units}); // updates hero stats\r\n        }\r\n        this.currentLiftLoss = this.calculateLiftLoss();\r\n      }\r\n    });\r\n  }\r\n\r\n  openDescription(tile: ARTile) {\r\n    // Opens hero or structure description when clicked\r\n    // Generic function because of grid structure\r\n    if(tile.display !== \"\" && tile.type !== \"hero\"){\r\n      this.currentlyDisplayedStructure = STRUCTURE_DATA[tile.image];\r\n    } else if(tile.type === \"hero\"){\r\n      this.currentlyDisplayedHero = this.units.filter(a => a.uid === tile.uid)[0];\r\n      this.currentlyDisplayedHeroStats = this.stat.calculateAllStats(Object.assign({}, this.currentlyDisplayedHero), {season: [parseInt(this.season.value)], allies: this.units});\r\n    }\r\n  }\r\n\r\n  changeMap(mapName: string) {\r\n    // Updates map to different type (e.g. springwater -> desert)\r\n    //TODO: this will become bugged if permanent tiles are added in first two rows of map as it doesn't account for hero tiles\r\n    let newMap = Object.assign([], this.maps[mapName]);\r\n    for(let i = 0; i < this.map.length; i++){\r\n      if(this.map[i].type !== \"blank\"){\r\n        if(newMap[i].permanent){\r\n          for(let j = 1; j < 36; j++){\r\n            if(i - j >= 0){\r\n              let tile = newMap[i - j];\r\n              if(!tile.permanent && tile.display === \"\" && tile.type === \"blank\"){\r\n                newMap[i - j] = this.map[i];\r\n                break;\r\n              } \r\n            }\r\n\r\n            if(i + j <= 35){\r\n              let tile = newMap[i + j];\r\n              if(!tile.permanent && tile.display === \"\" && tile.type === \"blank\" && this.map[i + j].type === \"blank\"){\r\n                newMap[i + j] = this.map[i];\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          newMap[i] = this.map[i];\r\n        }\r\n      }\r\n    }\r\n    this.map = Object.assign([], newMap);\r\n    this.currentMap = mapName;\r\n  }\r\n\r\n  openStructuresDialog() {\r\n    let structuresDialog = this.dialog.open(ARBuilderStructuresDialog, {\r\n      width: '450px',\r\n      height: '80%',\r\n      data: this.map.filter(a => a.display !== \"\").map(b => b.image)\r\n    });\r\n\r\n    structuresDialog.afterClosed().subscribe((res: ARTile[]) => {\r\n      // Updates map structures and counts\r\n      this.updateMapStructures(res);\r\n      this.counts.defense = res.filter(a => a.type === \"building\" || a.display === \"Fortress\").length;\r\n      this.counts.traps = res.filter(a => a.type === \"trap\").length;\r\n      this.counts.decorations = res.filter(a => a.type === \"decoration\").length;\r\n    });\r\n  }\r\n\r\n  updateMapStructures(structures: ARTile[]){\r\n    //TODO: comment this mess sometime\r\n    if(structures.length > 0){\r\n      if(!structures[0].uid){ // is building update\r\n        let flattenedNew = structures.map(a => a.image);\r\n        let toRemove = this.map.filter(a => a.display !== \"\" && a.type !== \"hero\" && !flattenedNew.includes(a.image)).map(b => b.image); //this should work for breakable walls and stuff\r\n        for(let i = 0; i < this.map.length; i++){\r\n          if(toRemove.includes(this.map[i].image)){\r\n            this.map[i] = {image: \"blank\", display: \"\", folder: \"aether_raids\", type: \"blank\", permanent: false, isSchool: false};\r\n          }\r\n        }\r\n    \r\n        let flattenedCurrent = this.map.map(a => a.image);\r\n        for(let structure of structures){\r\n          if(flattenedCurrent.includes(structure.image)){\r\n            continue;\r\n          } else {\r\n            for(let i = 0; i < this.map.length; i++){\r\n              if(this.map[i].image === \"blank\" && this.map[i].permanent === false){\r\n                this.map[i] = structure;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else { // is hero update\r\n        console.log(\"hero update\");\r\n        let currentHeroes = this.map.map((a, i) => {return {...a, ...{index: i}}}).filter(a => a.uid);\r\n        let currentUID = this.map.filter(a => a.uid).map(b => b.uid);\r\n        let newUID = structures.map(a => a.uid);\r\n        for(let hero of currentHeroes){\r\n          if(!newUID.includes(hero.uid)){\r\n            this.map[hero.index] = {image: \"blank\", display: \"\", folder: \"aether_raids\", type: \"blank\", permanent: false, isSchool: false};\r\n          }\r\n        }\r\n        \r\n        let removalPriority = this.map.filter((a, i) => i < 12).map((b, i) => {return {...b, ...{index: i}}}).filter((c, i) => c.display !== \"\" && c.type !== \"hero\");\r\n        console.log(this.map.filter((a, i) => i < 12));\r\n        for(let hero of structures){\r\n          if(!currentUID.includes(hero.uid)){\r\n            for(let i = 0; i < this.map.length; i++){\r\n              if(this.map[i].image === \"blank\" && this.map[i].permanent === false){\r\n                if(i < 12){\r\n                  this.map[i] = hero;\r\n                } else {\r\n                  let toRemove = removalPriority.shift();\r\n                  this.map[toRemove.index] = hero;\r\n                  delete toRemove['index'];\r\n                  this.map[i] = toRemove;\r\n                }\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  openHeroesDialog(){\r\n    let heroesDialog = this.dialog.open(ARBuilderHeroesDialog, {\r\n      width: '450px',\r\n      height: '80%',\r\n      data: this.units\r\n    });\r\n\r\n    heroesDialog.afterClosed().subscribe((res: HeroInfoModel[]) => {\r\n      let heroes = [];\r\n      for(let i = 0; i < res.length; i++){\r\n        if(!res[i].blessing){\r\n          res[i].build.blessing = parseInt(this.season.value);\r\n        }\r\n        heroes.push({slot: i, uid: res[i].uid, image: res[i].id, display: res[i].name + \": \" + res[i].title, folder: \"units\", type: \"hero\", permanent: false, isSchool: false});\r\n      }\r\n      if(this.currentlyDisplayedHero){\r\n        this.currentlyDisplayedHeroStats = this.stat.calculateAllStats(this.currentlyDisplayedHero, {season: [parseInt(this.season.value)], allies: this.units});\r\n        if(heroes.filter(a => a.uid === this.currentlyDisplayedHero.uid).length === 0){\r\n          this.currentlyDisplayedHero = undefined;\r\n        }\r\n      }\r\n      this.updateMapStructures(heroes);\r\n      this.units = res;\r\n      this.currentLiftLoss = this.calculateLiftLoss();\r\n    });\r\n  }\r\n\r\n  openTerrainDialog(){\r\n    let terrainDialog = this.dialog.open(ARBuilderTerrainDialog, {\r\n      width: '450px',\r\n      height: '80%',\r\n      data: this.currentMap\r\n    });\r\n\r\n    terrainDialog.afterClosed().subscribe((res: string) => {\r\n      this.changeMap(res);\r\n    });\r\n  }\r\n\r\n  openEditBuildDialog(){\r\n    let editBuildDialog = this.dialog.open(AREditBuildDialog, {\r\n      width: '30%',\r\n      height: '80%',\r\n      data: this.currentlyDisplayedHero\r\n    });\r\n\r\n    editBuildDialog.afterClosed().subscribe((res: HeroInfoModel) => {\r\n      console.log(res);\r\n      this.currentlyDisplayedHero = res;\r\n      for(let i = 0; i < this.units.length; i++){\r\n        if(this.units[i].uid === res.uid){\r\n          this.units[i] = res;\r\n        }\r\n      }\r\n      this.currentlyDisplayedHeroStats = this.stat.calculateAllStats(Object.assign({}, this.currentlyDisplayedHero), {season: [parseInt(this.season.value)], allies: this.units});\r\n      this.currentLiftLoss = this.calculateLiftLoss();\r\n    });\r\n  }\r\n\r\n  drop(event: CdkDragDrop<any>){\r\n    if(!event.container.data.item.permanent){\r\n      if(event.previousContainer.data.item.type === \"hero\"){\r\n        if(event.container.data.index < 12){\r\n          this.map[event.container.data.index] = event.previousContainer.data.item;\r\n          this.map[event.previousContainer.data.index] = event.container.data.item;\r\n        }\r\n      } else {\r\n        if(!(event.previousContainer.data.index > 11 && event.container.data.item.type === \"hero\")){\r\n          this.map[event.container.data.index] = event.previousContainer.data.item;\r\n          this.map[event.previousContainer.data.index] = event.container.data.item;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateLiftLoss(): number{\r\n    let max = this.MAX_LIFT_LOSS;\r\n    let numMythics = 0;\r\n    let numBlessed = 0;\r\n    for(let unit of this.units){\r\n      console.log(unit.blessing, this.season.value);\r\n      if(this.season.value == unit.blessing){ // == as season.value is string, unit.blessing is int\r\n        max -= unit.build.merges;\r\n        if(numMythics < 2){\r\n          numMythics += 1;\r\n        }\r\n      } else if(unit.build.blessing == this.season.value){\r\n        numBlessed += 1;\r\n      }\r\n    }\r\n    max -= numMythics * numBlessed * 5;\r\n    console.log(max, numMythics, numBlessed);\r\n    return max;\r\n  }\r\n\r\n  exportData(){\r\n    let href = \"data:application/json;charset=utf-8,\";\r\n    let data = {map: this.currentMap, mapData: this.map, unitData: this.units, season: this.season.value};\r\n    href += JSON.stringify(data);\r\n    let encodedURI = encodeURI(href);\r\n\r\n    let a = document.createElement(\"a\");\r\n    a.setAttribute(\"download\", \"ar_export.json\");\r\n    a.setAttribute('style', 'visibility:hidden');\r\n    a.setAttribute('href', encodedURI);\r\n\r\n    document.body.appendChild(a);\r\n    a.click();\r\n  }\r\n}","<div class=\"page_content\">\r\n    <div class=\"ar_builder_container\" cdkDropListGroup>\r\n        <div class=\"ar_builder_child_container\">\r\n            <mat-card>\r\n                <mat-card-title>AR Defense Builder</mat-card-title>\r\n                <p>Map: Springwater</p>\r\n                <p>Defense Structures: {{this.counts.defense}}/6</p>\r\n                <p>Traps: {{this.counts.traps}}/4</p>\r\n                <p>Decorations: {{this.counts.decorations}}/4</p>\r\n                <p>Heroes: {{this.units.length}}/6</p>\r\n                <button mat-raised-button color=\"primary\">Save/Load</button>\r\n                <button mat-raised-button color=\"primary\" (click)=\"exportData()\">Export/Share</button>\r\n                <mat-button-toggle-group aria-label=\"Blessing\" value=\"6\" [formControl]=\"season\">\r\n                    <mat-button-toggle value=\"6\" matTooltip=\"Dark Season\"><img src=\"assets/ui/dark_blessing.png\"></mat-button-toggle>\r\n                    <mat-button-toggle value=\"8\" matTooltip=\"Anima Season\"><img src=\"assets/ui/anima_blessing.png\"></mat-button-toggle>\r\n                </mat-button-toggle-group>\r\n                <p>Max Lift Loss: -{{this.currentLiftLoss}}</p>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"ar_builder_left_container ar_builder_child_container\">\r\n            <div class=\"ar_builder_map_container\">\r\n                <!-- <canvas id=\"ar_builder_map\" height=\"600\" width=\"450\" #ARBuilderMap>\r\n    \r\n                </canvas> -->\r\n                <img class=\"ar_builder_map\" [src]=\"'assets/maps/AR/'+this.currentMap+'.png'\">\r\n                <div class=\"ar_builder_overlay\"> <!-- AR Defense Map -->\r\n                    <ng-container *ngFor=\"let tile of map; let i = index\">\r\n                        <div class=\"map-item\" cdkDropList cdkDropListOrientation=\"horizontal\" [cdkDropListData]=\"{item:tile, index:i}\" (cdkDropListDropped)=\"drop($event)\" (click)=\"openDescription(tile)\">\r\n                            <div class=\"inner\" cdkDrag [cdkDragDisabled]=\"tile.type === 'blank'\">\r\n                                <div class=\"placeholder\" *cdkDragPlaceholder></div>\r\n                                <img [src]=\"'assets/'+tile.folder+'/'+tile.image+'.png'\" class=\"ar_building\">\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <mat-card>\r\n                <button mat-raised-button color=\"primary\" (click)=\"openHeroesDialog()\">Add Heroes</button>\r\n                <button mat-raised-button color=\"primary\" (click)=\"openStructuresDialog()\">Edit Structures</button>\r\n                <button mat-raised-button color=\"primary\" (click)=\"openTerrainDialog()\">Change Terrain</button>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"ar_builder_right_container ar_builder_child_container\">\r\n            <mat-card class=\"hero_info_card\" *ngIf=\"this.currentlyDisplayedHero\">\r\n                <div class=\"hero_info_title\">\r\n                    <div class=\"hero_info_title_image\">\r\n                        <img [src]=\"'assets/units/'+this.currentlyDisplayedHero.id+'.png'\">\r\n                    </div>\r\n                    <div class=\"hero_info_title_title\">\r\n                        <mat-card-title>{{this.currentlyDisplayedHero.name}}: {{this.currentlyDisplayedHero.title}}</mat-card-title>\r\n                        <img src=\"assets/ui/star_gold.png\" *ngFor=\"let i of [0,0,0,0,0]\">\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div class=\"hero_info_tables\">\r\n                    <table>\r\n                        <tr><td colspan=\"2\">Level 40<span *ngIf=\"this.currentlyDisplayedHero.build.merges > 0\">+{{this.currentlyDisplayedHero.build.merges}}</span></td></tr>\r\n                        <tr><td>HP: {{this.currentlyDisplayedHeroStats.hp}}</td><td>DF: {{this.currentlyDisplayedHero.build.dragonflowers}}</td></tr>\r\n                        <tr><td>ATK: {{this.currentlyDisplayedHeroStats.atk}}</td><td>SPD: {{this.currentlyDisplayedHeroStats.spd}}</td></tr>\r\n                        <tr><td>DEF: {{this.currentlyDisplayedHeroStats.def}}</td><td>RES: {{this.currentlyDisplayedHeroStats.res}}</td></tr>\r\n                        <tr><td colspan=\"2\">Blessing: {{BlessingEnum[this.currentlyDisplayedHero.build.blessing]|titlecase}}</td></tr>\r\n                    </table>\r\n                    <table>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.weapon ? this.currentlyDisplayedHero.build.skills.weapon.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.assist ? this.currentlyDisplayedHero.build.skills.assist.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.special ? this.currentlyDisplayedHero.build.skills.special.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.a ? this.currentlyDisplayedHero.build.skills.a.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.b ? this.currentlyDisplayedHero.build.skills.b.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.c ? this.currentlyDisplayedHero.build.skills.c.name : \"None\"}}</td></tr>\r\n                        <tr><td>{{this.currentlyDisplayedHero.build.skills.s ? this.currentlyDisplayedHero.build.skills.s.name : \"None\"}}</td></tr>\r\n                    </table>\r\n                </div>\r\n                <hr />\r\n                <button mat-raised-button color=\"primary\" (click)=\"openEditBuildDialog()\">Edit Build</button>\r\n                <hr>\r\n                <p>Note*: Stats include bonuses from skills and current mythic/legendary allies.</p>\r\n            </mat-card>\r\n            <mat-card *ngIf=\"currentlyDisplayedStructure\">\r\n                <mat-card-title><img class=\"unit_icon_tiny\" [src]=\"'assets/aether_raids/'+this.currentlyDisplayedStructure.image+'.png'\"> {{this.currentlyDisplayedStructure.display}}</mat-card-title>\r\n                <hr />\r\n                <p>Description: {{this.currentlyDisplayedStructure.description}}</p>\r\n                <p>Build/Upgrade Cost: <span *ngFor=\"let cost of this.currentlyDisplayedStructure.cost; let i = index\">{{cost}}<span *ngIf=\"i + 1 < this.currentlyDisplayedStructure.cost.length\">/</span></span> <img class=\"unit_icon_tiny\" [src]=\"'assets/ui/'+this.currentlyDisplayedStructure.costType+'.png'\"></p>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { SkillModel } from '../models';\r\nimport { UnitFinderService } from '../services/unit-finder.service';\r\n\r\n@Pipe({\r\n  name: 'heroSkillFilterBy'\r\n})\r\nexport class HeroSkillFilterByPipe implements PipeTransform {\r\n\r\n  unit: UnitFinderService = new UnitFinderService();\r\n\r\n  transform(arr: SkillModel[], heroId: string): any {\r\n    console.log(heroId);\r\n    let hero = this.unit.getHeroById(heroId);\r\n    if(!hero){\r\n      return [];\r\n    }\r\n    return arr.filter((x) => { \r\n      return (x.inheritable &&                                    // if the skill is inheritable\r\n        x.restrictedTo.moveType.includes(hero.movement_type) &&   // and the hero has the correct move type to inherit it\r\n        x.restrictedTo.weaponType.includes(hero.unit_type)) ||    // and the hero has the correct weapon type to inherit it\r\n        x.fodder.filter((y) => y.includes(heroId)).length > 0     // or if the hero is in the fodder list (i.e. for exclusive skills like \"raging storm\")\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Dictionary, ARTile } from '../models';\r\n\r\nconst AR_MAPS: Dictionary<ARTile[]> = require('../data/maps/AR.json');\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MapFinderService {\r\n    constructor(){}\r\n\r\n    public getARMaps = (): Dictionary<ARTile[]> => {\r\n        return AR_MAPS;\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { MatDialogRef, MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Askr\\'s Archives';\r\n\r\n  constructor(){ }\r\n\r\n}\r\n","<header>\r\n    <button mat-button>Home</button>\r\n    <button mat-button routerLink=\"/ar-builder\">AR-D Builder</button>\r\n</header>\r\n<router-outlet></router-outlet>\r\n<footer>\r\n    <button mat-button>Report a Bug / Request a Feature</button>\r\n    <button mat-button><img src=\"assets/ui/discord.png\" alt=\"Discord\"></button>\r\n</footer>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SkillModel } from 'src/app/models';\r\nimport { SkillsService } from 'src/app/services/skills.service';\r\nimport { UnitFinderService } from 'src/app/services/unit-finder.service';\r\n\r\n@Component({\r\n  selector: 'app-skill-info',\r\n  templateUrl: './skill-info.component.html',\r\n  styleUrls: ['./skill-info.component.scss']\r\n})\r\nexport class SkillInfoComponent implements OnInit {\r\n\r\n  @Input() data: SkillModel;\r\n\r\n  refines: SkillModel[];\r\n\r\n  hasFodder: boolean;\r\n  \r\n  constructor(private skills: SkillsService, public units: UnitFinderService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.data.might > 0){\r\n      this.refines = this.getRefines();\r\n    }\r\n\r\n    this.hasFodder = this.data.fodder.filter((item) => item.length > 0).length > 0;\r\n  }\r\n\r\n  getRefines = (): SkillModel[] => {\r\n    return this.skills.getRefinesById(this.data.id);\r\n  }\r\n\r\n}\r\n","<h2 class=\"image_title\"><img class=\"skill_icon_small\" [src]=\"'assets/skills/'+data.image+'.png'\" [matTooltip]=\"data.name\" [alt]=\"data.name\"> {{data.name}}</h2>\r\n<hr />\r\n<h3>Skill Description</h3>\r\n<p>{{data.description}}</p>\r\n<p *ngIf=\"data.might > 0\">Weapon MT: {{data.might}}</p>\r\n<p *ngIf=\"data.cooldown > 0\">Special Cooldown: {{data.cooldown}}</p>\r\n<p>Inheritable?: {{data.inheritable}}</p>\r\n<hr />\r\n<div *ngIf=\"refines\">\r\n    <h3>Weapon Refines</h3>\r\n    <table>\r\n        <tr>\r\n            <th>Refine Type</th>\r\n            <th>Refine Description</th>\r\n        </tr>\r\n        <tr *ngFor=\"let refine of refines\">\r\n            <td><img class=\"skill_icon_small\" [src]=\"'assets/skills/'+refine.image+'.png'\" [matTooltip]=\"refine.name\" [alt]=\"refine.name\"> {{refine.name}}</td>\r\n            <td>{{refine.description}}</td>\r\n        </tr>\r\n    </table>\r\n    <hr />\r\n</div>\r\n<div *ngIf=\"hasFodder\">\r\n    <h3>Units that have this Skill</h3>\r\n    <table>\r\n        <div *ngFor=\"let fodder of data.fodder; let i = index\">\r\n            <tr *ngIf=\"fodder.length > 0\">\r\n                <th>{{i + 1}} Star</th>\r\n                <td><img *ngFor=\"let hero of fodder\" class=\"unit_icon_small\" [src]=\"'assets/units/'+hero+'.png'\" [matTooltip]=\"units.getUnitNameById(hero) + ': ' + units.getUnitTitleById(hero)\"></td>\r\n            </tr>\r\n        </div>\r\n    </table>\r\n</div>\r\n","export * from './SkillModel';\r\nexport * from './HeroModel';\r\nexport * from './HeroTableModel';\r\nexport * from './Dictionary';\r\nexport * from \"./Generic\";\r\nexport * from './HeroDataModel';\r\nexport * from \"./Enums\";\r\nexport * from './HeroInfoModel';\r\nexport * from './BuildModel';","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { ARTile } from 'src/app/models';\r\n\r\n@Component({\r\n    selector: 'ar-builder-structures-dialog',\r\n    templateUrl: './ar-builder-structures-dialog.html',\r\n    styleUrls: ['./ar-builder-structures-dialog.scss']\r\n})\r\nexport class ARBuilderStructuresDialog {\r\n    \r\n    st: string = \"Hello world\";\r\n\r\n    public buildings: ARTile[] = [{image: \"aether_amphorae\", display: \"Aether Amphorae\", folder: \"aether_raids\", type: \"other\", permanent: false, selected: true, isSchool: false}, {image: \"aether_fountain\", display: \"Aether Fountain\", folder: \"aether_raids\", type: \"other\", permanent: false, selected: true, isSchool: false}, {image: \"armor_school\", display: \"Armor School\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: true}, {image: \"bolt_tower\", display: \"Bolt Tower\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"bright_shrine\", display: \"Bright Shrine\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false},{image: \"catapult\", display: \"Catapult\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"cavalry_school\", display: \"Cavalry School\", folder: \"aether_raids\", type:\"building\", permanent: false, selected: false, isSchool: true}, {image: \"dark_shrine\", display: \"Dark Shrine\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"duos_hindrance\", display: \"Duo's Hindrance\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"flier_school\", display: \"Flier School\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: true}, {image: \"fortress\", display: \"Fortress\", folder: \"aether_raids\", type: \"other\", permanent: false, selected: true, isSchool: false}, {image: \"healing_tower\", display: \"Healing Tower\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"infantry_school\", display: \"Infantry School\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: true}, {image: \"panic_manor\", display: \"Panic Manor\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}, {image: \"tactics_room\", display: \"Tactics Room\", folder: \"aether_raids\", type: \"building\", permanent: false, selected: false, isSchool: false}];\r\n    public buildingCount: number = 1;\r\n    public schoolSelected: boolean = false;\r\n\r\n    public traps: ARTile[] = [{image: \"bolt_trap\", display: \"Bolt Trap\", folder: \"aether_raids\", type: \"trap\", permanent: false, isSchool: false}, {image: \"fake_bolt_trap\", display: \"Fake Bolt Trap\", folder: \"aether_raids\", type: \"trap\", permanent: false, isSchool: false}, {image: \"heavy_trap\", display: \"Heavy Trap\", folder: \"aether_raids\", type: \"trap\", permanent: false, isSchool: false}, {image: \"fake_heavy_trap\", display: \"Fake Heavy Trap\", folder: \"aether_raids\", type: \"trap\", permanent: false, isSchool: false}];\r\n\r\n    public decorations: ARTile[] = [{image: 'dining_hall', display: \"Dining Hall\", folder: \"aether_raids\", type:\"decoration\", permanent: false, isSchool: false}, {image: 'field', display: \"Field\", folder: \"aether_raids\", type:\"decoration\", permanent: false, isSchool: false}, {image: 'hot_spring', display: \"Hot Spring\", folder: \"aether_raids\", type:\"decoration\", permanent: false, isSchool: false}, {image: 'inn', display: \"Inn\", folder: \"aether_raids\", type:\"decoration\", permanent: false, isSchool: false}];\r\n    public decorationCount: number = 0;\r\n\r\n    constructor(public dialogRef: MatDialogRef<ARBuilderStructuresDialog>, private snackBar: MatSnackBar, @Inject(MAT_DIALOG_DATA) public data: string[]){\r\n        this.dialogRef.beforeClosed().subscribe( // overwrites default exiting behaviour - important if user clicks outside of dialog to close\r\n            () => {\r\n                let ret = this.buildings.filter(a => a.selected).concat(this.traps.filter(b => b.selected).concat(this.decorations.filter(c => c.selected))); // quick and dirty\r\n                this.dialogRef.close(ret);\r\n            }\r\n        );\r\n        \r\n        for(let i = 0; i < this.buildings.length; i++){\r\n            if(data.includes(this.buildings[i].image) && this.buildings[i].type !== \"other\"){\r\n                this.buildings[i].selected = true;\r\n                this.buildingCount += 1;\r\n                if(this.buildings[i].isSchool){\r\n                    this.schoolSelected = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.traps.length; i++){\r\n            if(data.includes(this.traps[i].image)){\r\n                this.traps[i].selected = true;\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < this.decorations.length; i++){\r\n            if(data.includes(this.decorations[i].image)){\r\n                this.decorations[i].selected = true;\r\n                this.decorationCount += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectBuilding = (index: number) => {\r\n        let building = this.buildings[index];\r\n        if(building.selected){\r\n            if(building.type !== \"other\"){\r\n                this.buildings[index].selected = false;\r\n                this.buildingCount--;\r\n                if(building.isSchool){\r\n                    this.schoolSelected = false;\r\n                }\r\n            } else {\r\n                this.snackBar.open(\"Fortress, Aether Fountain and Aether Amphorae cannot be unselected\", \"Close\", {duration: 2000});\r\n            }\r\n        } else {\r\n            if(this.buildingCount < 6){\r\n                if(building.isSchool){\r\n                    if(!this.schoolSelected){\r\n                        this.buildings[index].selected = true;\r\n                        this.buildingCount++;\r\n                        this.schoolSelected = true;\r\n                    } else {\r\n                        this.snackBar.open(\"Only 1 school can be on the field at a time\", \"Close\", {duration: 2000});\r\n                    }\r\n                } else {\r\n                    this.buildings[index].selected = true;\r\n                    this.buildingCount++;\r\n                }\r\n            } else {\r\n                this.snackBar.open(\"Max of 5 buildings (+Fortress, Fountain and Amphorae) allowed\", \"Close\", {duration: 2000});\r\n            }\r\n        }\r\n    }\r\n\r\n    selectTrap = (index: number) => {\r\n        this.traps[index].selected = !this.traps[index].selected;\r\n    }\r\n\r\n    selectDecoration = (index: number) => {\r\n        let decoration = this.decorations[index];\r\n        if(decoration.selected){\r\n            this.decorations[index].selected = false;\r\n            this.decorationCount--;\r\n        } else {\r\n            if(this.decorationCount < 4){\r\n                this.decorations[index].selected = true;\r\n                this.decorationCount++;\r\n            } else {\r\n                this.snackBar.open(\"Max of 4 decorations allowed\", \"Close\", {duration: 2000});\r\n            }\r\n        }\r\n    }\r\n\r\n    onNoClick() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    \r\n}","<h1>Buildings</h1>\r\n<hr />\r\n<div class=\"ar-structures-table\">\r\n    <div class=\"building-container\" *ngFor=\"let building of this.buildings; let i = index\">\r\n        <img class=\"ar_building_checkmark\" src=\"assets/ui/checkmark.png\" *ngIf=\"building.selected\">\r\n        <img (click)=\"selectBuilding(i)\" [src]=\"'assets/'+building.folder+'/'+building.image+'.png'\" class='ar_building' [matTooltip]=\"building.display\">\r\n    </div>\r\n</div>\r\n<h1>Traps</h1>\r\n<hr />\r\n<div class=\"ar-structures-table\">\r\n    <div class=\"building-container\" *ngFor=\"let trap of this.traps; let i = index\">\r\n        <img class=\"ar_building_checkmark\" src=\"assets/ui/checkmark.png\" *ngIf=\"trap.selected\">\r\n        <img (click)=\"selectTrap(i)\" [src]=\"'assets/'+trap.folder+'/'+trap.image+'.png'\" class='ar_building' [matTooltip]=\"trap.display\">\r\n    </div>\r\n</div>\r\n<h1>Decorations</h1>\r\n<hr />\r\n<div class=\"ar-structures-table\">\r\n    <div class=\"building-container\" *ngFor=\"let decoration of this.decorations; let i = index\">\r\n        <img class=\"ar_building_checkmark\" src=\"assets/ui/checkmark.png\" *ngIf=\"decoration.selected\">\r\n        <img (click)=\"selectDecoration(i)\" [src]=\"'assets/'+decoration.folder+'/'+decoration.image+'.png'\" class='ar_building' [matTooltip]=\"decoration.display\">\r\n    </div>\r\n</div>\r\n<button mat-raised-button (click)=\"close()\">Close</button>","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { HeroInfoModel } from 'src/app/models/HeroInfoModel';\r\n\r\n@Component({\r\n    selector: 'ar-edit-build-dialog',\r\n    templateUrl: './ar-edit-build-dialog.html',\r\n    styleUrls: ['./ar-edit-build-dialog.scss']\r\n})\r\nexport class AREditBuildDialog {\r\n\r\n    public settings: {heroEnabled: boolean, blessingEnabled: boolean, summonerSupportEnabled: boolean, allySupportEnabled: boolean} = {heroEnabled: false, blessingEnabled: false, summonerSupportEnabled: false, allySupportEnabled: false};\r\n\r\n    constructor(public dialogRef: MatDialogRef<AREditBuildDialog>, @Inject(MAT_DIALOG_DATA) public data: HeroInfoModel){\r\n        console.log(this.data);\r\n        this.dialogRef.beforeClosed().subscribe( // overwrites default exiting behaviour - important if user clicks outside of dialog to close\r\n            () => {\r\n                console.log(this.data);\r\n                this.dialogRef.close(this.data);\r\n            }\r\n        );\r\n    }\r\n    \r\n    onNoClick() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    \r\n}","<app-edit-build [heroData]='data' [settings]='settings' (heroDataChange)=\"data=$event\"></app-edit-build>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatTableModule, MatTableDataSource, MatFormFieldModule, MatInputModule, MatDividerModule, MatRippleModule, MatSnackBarModule, MatCardModule, MatSelectModule, MatOptionModule, MatAutocompleteModule, MatTooltipModule, MatCheckboxModule, MatProgressSpinnerModule, MatGridListModule, MatTabsModule, MatDialogModule, MatExpansionPanel, MatExpansionModule, MatPaginatorModule, MatStepperModule, MatButtonToggleModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SkillInfoDialog } from './pages/skill-info-dialog/skill-info-dialog';\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\nimport { StringFilterByPipe, HeroSkillFilterByPipe } from './pipes';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { SkillInfoComponent } from './pages/skill-info/skill-info.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ArBuilderComponent } from './pages/ar-builder/ar-builder.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { ARBuilderStructuresDialog } from './pages/ar-builder/ar-builder-structures-dialog/ar-builder-structures-dialog';\r\nimport { ARBuilderHeroesDialog } from './pages/ar-builder/ar-builder-heroes-dialog/ar-builder-heroes-dialog';\r\nimport { ARBuilderTerrainDialog } from './pages/ar-builder/ar-builder-terrain-dialog/ar-builder-terrain-dialog';\r\nimport { AREditBuildDialog } from './pages/ar-builder/ar-edit-build-dialog/ar-edit-build-dialog';\r\nimport { EditBuild } from './pages/edit-build/edit-build';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SkillInfoDialog,\r\n    StringFilterByPipe,\r\n    HeroSkillFilterByPipe,\r\n    NotFoundComponent,\r\n    SkillInfoComponent,\r\n    ArBuilderComponent,\r\n    ARBuilderStructuresDialog,\r\n    ARBuilderHeroesDialog,\r\n    ARBuilderTerrainDialog,\r\n    AREditBuildDialog,\r\n    EditBuild\r\n  ],\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatDividerModule,\r\n    MatRippleModule,\r\n    MatSnackBarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatDividerModule,\r\n    MatPaginatorModule,\r\n    NgxMatSelectSearchModule,\r\n    MatStepperModule,\r\n    HttpClientModule,\r\n    DragDropModule,\r\n    MatButtonToggleModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [SkillInfoDialog, ARBuilderStructuresDialog, ARBuilderHeroesDialog, ARBuilderTerrainDialog, AREditBuildDialog]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Dictionary } from 'src/app/models';\r\n\r\n@Component({\r\n    selector: 'ar-builder-terrain-dialog',\r\n    templateUrl: './ar-builder-terrain-dialog.html',\r\n    styleUrls: ['./ar-builder-terrain-dialog.scss']\r\n})\r\nexport class ARBuilderTerrainDialog {\r\n\r\n    mapDisplay: Dictionary<string> = {\"springwater\": \"Springwater\", \"wintry\": \"Wintry\", \"abandoned_castle\": \"Abandoned Castle\", \"snowdust\": \"Snowdust\", \"desert\": \"Desert\", \"spring_breeze\": \"Spring Breeze\", \"leafy_canopy\": \"Leafy Canopy\", \"lost_castle\": \"Lost Castle\", \"bright_grassland\": \"Bright Grassland\", \"lava_floes\": \"Lava Floes\"};\r\n    currentlySelected: string = \"desert\";\r\n    maps: string[] = [\"springwater\", \"wintry\", \"abandoned_castle\", \"snowdust\", \"desert\", \"spring_breeze\", \"leafy_canopy\", \"lost_castle\", \"bright_grassland\", \"lava_floes\"];\r\n    constructor(public dialogRef: MatDialogRef<ARBuilderTerrainDialog>, private snackBar: MatSnackBar, @Inject(MAT_DIALOG_DATA) public data: string){\r\n        this.currentlySelected = this.data;\r\n\r\n        this.dialogRef.beforeClosed().subscribe( // overwrites default exiting behaviour - important if user clicks outside of dialog to close\r\n            () => {\r\n                this.dialogRef.close(this.currentlySelected);\r\n            }\r\n        );\r\n    }\r\n\r\n    setTerrain(map: string){\r\n        this.currentlySelected = map;\r\n    }\r\n\r\n    onNoClick() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n    \r\n}","<div class=\"map_container\" *ngFor=\"let map of this.maps\">\r\n    <img [src]=\"'assets/ui/'+map+'.png'\" (click)=\"setTerrain(map)\">\r\n    <img src=\"assets/ui/checkmark.png\" class=\"checkmark\" *ngIf=\"map === this.currentlySelected\">\r\n    <p>{{mapDisplay[map]}}</p>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stringFilterBy'\r\n})\r\nexport class StringFilterByPipe implements PipeTransform {\r\n\r\n  transform(arr: any[], searchText: string,fieldName?:string): any[] {\r\n    if (!arr) return [];\r\n    if (!searchText) return arr;\r\n    searchText = searchText.toLowerCase();\r\n    return arr.filter((it:any) => {\r\n      if(typeof it == 'string'){\r\n        return it.toLowerCase().includes(searchText);\r\n      }else if(typeof it == 'number'){\r\n        return it.toString().toLowerCase().includes(searchText);\r\n      }else{\r\n        return it[fieldName].toLowerCase().includes(searchText);\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n}\r\n","export * from \"./hero-skill-filter-by.pipe\";\r\nexport * from \"./string-filter-by.pipe\";","import { Injectable } from '@angular/core';\r\nimport { SkillModel, Dictionary } from '../models';\r\nimport { SkillInfoDialog } from '../pages/skill-info-dialog/skill-info-dialog';\r\nimport { MatDialogRef, MatDialog } from '@angular/material';\r\n\r\nconst SKILLS_DICTIONARY: Dictionary<SkillModel> = require('../data/skills/skills.json');\r\nconst SKILLS_BY_CATEGORIES: SkillModel[][] = require('../data/skills/skill_categories.json'); // indexed by CATEGORIES\r\n\r\nconst MAX_SKILLS_BY_CATEGORIES: SkillModel[][] = require('../data/skills/max_tier_skills_by_categories.json');\r\n\r\nconst REFINE_SKILLS: Dictionary<SkillModel[]> = require('../data/skills/refine_skill_data.json');\r\n\r\nconst CATEGORIES = [\"weapon\", \"assist\", \"special\", \"a\", \"b\", \"c\", \"s\", \"refine\", \"beast\"]; // index of categories in SKILLS_BY_CATEGORIES\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillsService {\r\n  skillDialog: MatDialogRef<SkillInfoDialog>;\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  getAllSkills = (): Dictionary<SkillModel> => {\r\n    return SKILLS_DICTIONARY;\r\n  }\r\n\r\n  getAllSkillCategories = (): SkillModel[][] => {\r\n    return SKILLS_BY_CATEGORIES;\r\n  }\r\n\r\n  getAllMaxSkillsCategories = (): SkillModel[][] => {\r\n    return MAX_SKILLS_BY_CATEGORIES;\r\n  }\r\n\r\n  getSkillById = (id: string): SkillModel => {\r\n    return SKILLS_DICTIONARY[id];\r\n  }\r\n\r\n  getAllSkillsInCategory = (category: string): SkillModel[] => {\r\n    return SKILLS_BY_CATEGORIES[CATEGORIES.indexOf(category)];\r\n  }\r\n\r\n  getAllMaxSkillsInCategory = (category: string): SkillModel[] => {\r\n    return MAX_SKILLS_BY_CATEGORIES[CATEGORIES.indexOf(category)];\r\n  }\r\n\r\n  getRefinesById = (id: string): SkillModel[] => {\r\n    console.log(id);\r\n    return REFINE_SKILLS[id];\r\n  }\r\n\r\n  getAllRefines = (): Dictionary<SkillModel[]> => {\r\n    return REFINE_SKILLS;\r\n  }\r\n\r\n  openSkillDialog(skill: SkillModel): MatDialogRef<SkillInfoDialog>{\r\n    return this.dialog.open(SkillInfoDialog, {\r\n      width: '50%',\r\n      height: '50%',\r\n      data: skill\r\n    });\r\n  }\r\n}\r\n","import { Dictionary } from '.';\r\nimport { HeroModel } from './HeroModel';\r\n\r\nexport class SkillModel{\r\n    name: string;\r\n    description: string;\r\n    image: string;\r\n    id: string;\r\n    fodder: string[][];\r\n    inheritable: boolean;\r\n    refined: boolean;\r\n    might: number;\r\n    restrictedTo: {moveType: number[], weaponType: number[]};\r\n    sp: number;\r\n    score: number;\r\n    cooldown: number; // for special skills only\r\n    stats: Dictionary<number>;\r\n}","import { Injectable } from '@angular/core';\r\nimport { IVS, Stats } from '../models';\r\nimport { HeroInfoModel } from '../models/HeroInfoModel';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StatsCalcualator{\r\n    constructor(){}\r\n\r\n    rarityGrowths: number[] = [86, 93, 100, 107, 114];\r\n\r\n    calculateAllStats(hero: HeroInfoModel, settings?: {season?: number[], allies?: HeroInfoModel[]}): Stats{\r\n\r\n        // if no hero, return empty stat spread\r\n        if(!hero){\r\n            return {hp: 0, atk: 0, spd:0,def:0,res:0};\r\n        }\r\n\r\n        let stats = {hp: 0,atk: 0,spd:0,def:0,res:0};\r\n        let bst = Object.assign({}, hero.base_stats);\r\n\r\n        // Orders stats in highest -> lowest (HP is always the last)\r\n        let orderedStats = Object.keys(bst).sort((a,b) => {if(b === \"hp\"){return -1;} return bst[b] - bst[a]});\r\n        \r\n        // Orders stats in highest -> lowest\r\n        let orderedStatsMerges = Object.keys(bst).sort((a,b) => {return bst[b] - bst[a]});\r\n\r\n        // Duplicates orderedStatsMerges\r\n        let orderedDragonFlowers = Object.assign([], orderedStatsMerges);\r\n\r\n        // bst is default for 3* for 4*/5*, bst needs to be increased\r\n        if(hero.build.rarity === 4){\r\n            for(let i = 0; i < 2; i++){\r\n                let stat = orderedStats.shift();\r\n                bst[stat] += 1;\r\n            }\r\n        } else if(hero.build.rarity === 5){\r\n            for(let i = 0; i < 5; i++){\r\n                let stat = orderedStats.shift();\r\n                bst[stat] += 1;\r\n            }\r\n        }\r\n        \r\n        // Increases growths/bst based on boon bane, no bane applied if hero's merges are 0\r\n        let growths = Object.assign({}, hero.growth_rates);\r\n        if(hero.build.ivs.boon !== 0){\r\n            growths[IVS[hero.build.ivs.boon]] += 5;\r\n            bst[IVS[hero.build.ivs.boon]] += 1;\r\n        }\r\n        if(hero.build.ivs.bane !== 0 && hero.build.merges === 0){\r\n            growths[IVS[hero.build.ivs.bane]] -= 5;\r\n            bst[IVS[hero.build.ivs.boon]] -= 1;\r\n        }\r\n\r\n\r\n        // Calculates growth values using formula Trunc(Level Increase * (Trunc(stat growth * rarity multiplier)))\r\n        // divisions are required due to floating point errors in javascript\r\n        for(let stat of Object.keys(growths)){\r\n            let value = Math.floor(39 * (Math.floor(growths[stat] * this.rarityGrowths[hero.build.rarity - 1] / 100) / 100));\r\n            stats[stat] = bst[stat] + value + (hero.build.skills.weapon ? hero.build.skills.weapon.stats[stat] : 0) + (hero.build.skills.assist ? hero.build.skills.assist.stats[stat] : 0) + (hero.build.skills.special ? hero.build.skills.special.stats[stat] : 0) + (hero.build.skills.a ? hero.build.skills.a.stats[stat] : 0) + (hero.build.skills.b ? hero.build.skills.b.stats[stat] : 0) + (hero.build.skills.c ? hero.build.skills.c.stats[stat] : 0) + (hero.build.skills.c ? hero.build.skills.c.stats[stat] : 0);\r\n        }\r\n\r\n        // Merge stat increases\r\n        for(let i = 0; i < hero.build.merges; i++){\r\n            if(i === 0 && hero.build.ivs.boon === IVS.neutral){ // neutral iv increase. boon iv increase is done when increasing bst & growth value for stat\r\n                let statsTop = orderedStatsMerges.slice(0,3);\r\n                for(let stat of statsTop){\r\n                    stats[stat] += 1;\r\n                }\r\n            }\r\n            for(let j = 0; j < 2; j++){\r\n                let stat = orderedStatsMerges.shift();\r\n                stats[stat] += 1;\r\n                orderedStatsMerges.push(stat);\r\n            }\r\n        }\r\n\r\n        // Dragonflowers\r\n        for(let i = 0; i < hero.build.dragonflowers; i++){\r\n            let stat = orderedDragonFlowers.shift();\r\n            stats[stat] += 1;\r\n            orderedDragonFlowers.push(stat);\r\n        }\r\n\r\n        // Resplendent stat increase\r\n        if(hero.build.resplendent){\r\n            for(let stat of Object.keys(stats)){\r\n                stats[stat] += 2;\r\n            }\r\n        }\r\n\r\n        if(settings){\r\n            //TODO: potential bug/issue, if season is set to legendary season and mythic/legendary are paired, neither will get buff\r\n            //TODO: this is important if I ever add multiple seasons to AR-D builder as legendary heroes won't get mythic stat boosts\r\n            if(settings.season && settings.allies && !settings.season.includes(hero.blessing)){ //\r\n                for(let ally of settings.allies){\r\n                    if(ally.uid !== hero.uid && settings.season.includes(ally.blessing) && ally.blessing !== 0){\r\n                        for(let stat of Object.keys(ally.blessing_bonus)){\r\n                            stats[stat] += ally.blessing_bonus[stat];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // add weapon might to atk stat\r\n        stats.atk += hero.build.skills.weapon ? hero.build.skills.weapon.might : 0;\r\n\r\n        return stats;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n    <a href=\"https://twitter.com/TlayoliStudio\" target=\"_blank\"><img src=\"assets/ui/veronica-not-found.png\" matTooltip=\"Art by @TlayoliStudio (click)\"/></a>\r\n\r\n    <div class=\"card-float-right\">\r\n        <h2>404 - Page not Found</h2>\r\n        <p>Uh oh, that page doesn't exist!</p>\r\n        <p>If you think this is an issue - place a bug report or send a message on our <a href=\"#\" target=\"_blank\">discord</a>!</p>\r\n        <button mat-raised-button routerLink=\"/\" color=\"primary\">Return to Home</button>\r\n    </div>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { ArBuilderComponent } from './pages/ar-builder/ar-builder.component';\r\nimport { EditBuild } from './pages/edit-build/edit-build';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'ar-builder', component: ArBuilderComponent},\r\n  // { path: 'edit-build-debug', component: EditBuild},\r\n  { path: '', redirectTo: 'ar-builder', pathMatch: 'full'},\r\n  { path: '**', pathMatch: 'full', component: NotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HeroModel, HeroTableModel, Dictionary, HeroDataModel } from '../models';\r\n\r\nconst HERO_LIST: HeroDataModel[] = require('../data/units/hero_list.json');\r\n\r\nconst HERO_DICTIONARY: Dictionary<HeroDataModel> = require('../data/units/hero_dictionary.json');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UnitFinderService {\r\n\r\n  constructor() { }\r\n\r\n  public getHeroList(): HeroDataModel[]{\r\n    return HERO_LIST; //! Most Recent Version\r\n  }\r\n\r\n  public getHeroDictionary(): Dictionary<HeroDataModel>{\r\n    return HERO_DICTIONARY; //! Most Recent Version\r\n  }\r\n\r\n  public getHeroById(id: string): HeroDataModel{\r\n    return HERO_DICTIONARY[id]; //! Most Recent Version\r\n  }\r\n\r\n  public getUnitNameById(id: string): string {\r\n    return this.getHeroById(id).name; //! Most Recent Version\r\n  }\r\n\r\n  public getUnitTitleById(id: string): string {\r\n    return this.getHeroById(id).title; //! Most Recent Version\r\n  }\r\n}\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}